@using TastyEatsBD.Core.Entities;
@using TastyEatsBD.Core.Interfaces;
@using TastyEatsBD.Core.DTOs;
@using TastyEatsBD.WebApp.Components.Customer.Shared;

@inject IRestaurantDiscoveryService RestaurantDiscoveryService
@inject IFileService FileService

@rendermode InteractiveServer

@switch (CurrentUIState)
{
    case UIState.Search:
        <SearchRestaurant OnRestaurantClicked="LoadResturantMenuAsync" />
        break;
    case UIState.RestaurantMenu:
        <RestaurantMenu Restaurant="@SelectedResturant" />
        break;
}

@code {
    private UIState CurrentUIState { get; set; } = UIState.Search;

    private RestaurantInfo SelectedResturant { get; set; }

    private async Task LoadResturantMenuAsync(RestaurantInfo restaurantInfo)
    {
        CurrentUIState = UIState.RestaurantMenu;
        SelectedResturant = restaurantInfo;
        StateHasChanged();
    }

    private enum UIState
    {
        Search,
        RestaurantMenu,
        OrderComponent // Add other states as needed
    }
}
